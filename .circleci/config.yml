version: 2

references:
  node_container: &node_container
    working_directory: ~/repo
    docker:
      - image: circleci/node:latest

  restore_build: &restore_build
    restore_cache:
      name: Restore build
      keys:
        - source-v3-{{ .Branch }}-{{ .Revision }}
        - source-v3-{{ .Branch }}-
        - source-v3-

  restore_yarn: &restore_yarn
    restore_cache:
      name: Restore node_modules
      keys:
        - v3-dependencies-{{ checksum "package.json" }}
        - v3-dependencies-

  cache_build: &cache_build
    save_cache:
      name: Cache build
      key: source-v3-{{ .Branch }}-{{ .Revision }}
      paths:
        - '.'

  cache_yarn: &cache_yarn
    save_cache:
      name: Cache node_modules
      paths:
        - node_modules
      key: v3-dependencies-{{ checksum "package.json" }}

  allowe_github: &allowe_github
    run:
      name: Configure github access
      command: mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config

jobs:
  build:
    <<: *node_container
    steps:
      - *restore_build
      - checkout
      - *restore_yarn
      - run:
          name: Configure registries
          command: cp sample.npmrc .npmrc
      - run:
          name: Install dependencies
          command: yarn install --frozen-lockfile
      - run:
          name: Build packages
          command: yarn lerna:build
      - *cache_yarn
      - *cache_build

  lint_eslint:
    <<: *node_container
    steps:
      - *restore_build
      - run:
          name: Run ESLint
          command: yarn lint:eslint

  lint_stylelint:
    <<: *node_container
    steps:
      - *restore_build
      - run:
          name: Run StyleLint
          command: yarn lint:stylelint

  lint_tsc:
    <<: *node_container
    steps:
      - *restore_build
      - run:
          name: Run tsc linting
          command: yarn lint:tsc

  publish:
    <<: *node_container
    steps:
      - *restore_build
      - *allowe_github
      - run:
          name: Publish and push to registry
          command: yarn lerna:publish --yes

workflows:
  version: 2
  pipe:
    jobs:
      - build

      - lint_eslint:
          requires:
            - build
      - lint_stylelint:
          requires:
            - build
      - lint_tsc:
          requires:
            - build

      - publish:
          requires:
            - lint_eslint
            - lint_stylelint
            - lint_tsc
          filters:
            branches:
              only: master
